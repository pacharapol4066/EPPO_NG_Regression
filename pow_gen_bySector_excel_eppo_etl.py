#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
from pathlib import Path
pd.set_option('display.width', 300)
rootSource = Path('source_csv_data')
rootOutput = Path('transformed_data')


# In[2]:


def iterate_col_name(header_list,startPos):
    for pos in header_list:
        if (pos.startswith('Unnamed:')) == True:
            header_list[startPos] = header_list[startPos - 1]
        startPos += 1
    return header_list


# In[3]:


# Get YEAR & MONTH column value
def getElementValue(elementVal,choice):
    bufferVal = []
    lastStr = ''
    if choice == 'Y':
        for pos in elementVal:
            if str(pos).isdigit():
                bufferVal.append(pos)
                lastStr = pos
            else:
                bufferVal.append(lastStr)
    elif choice == 'M':
        for pos in elementVal:
            if not str(pos).isdigit():
                bufferVal.append(str(pos).strip())
                lastStr = pos
            else:
                bufferVal.append(lastStr)
    return bufferVal


# In[4]:


print('power generated transformation start!.')


# In[5]:


output_file = 'Pandas power generated by sector.csv'
powGen_excel_file = "Table 5.2-1 Power Generation by Type of Fuel_Monthly33Yrs.xlsx"
xl = pd.ExcelFile(rootSource / powGen_excel_file)


# In[6]:


powGen_lev1_df = xl.parse("T5.2-1M", header=3, index_col=0)
powGen_lev2_df = xl.parse("T5.2-1M", header=5, index_col=0)
powGen_lev3_df = xl.parse("T5.2-1M", header=6, index_col=0)


# In[7]:


powGen_hdLev1_list = ['header1','header2','header3','header4','header5','header6','header7','header8','header9','header10'
                     ,'header11','header12','header13']


# In[8]:


powGen_hdLev2_list = list(powGen_lev2_df.columns)
powGen_hdLev3_list = list(powGen_lev3_df.columns)


# In[9]:


### loopRun1 = 0
for loopRun1,each_lev2 in enumerate(powGen_hdLev2_list,0):
    if not each_lev2.startswith('Unnamed:'):
        powGen_hdLev1_list[loopRun1] = powGen_hdLev2_list[loopRun1] + ' ' + powGen_hdLev3_list[loopRun1]
    else:
        powGen_hdLev1_list[loopRun1] = powGen_hdLev3_list[loopRun1]


# In[10]:


powGen_hdLev1_list[12] = "Remove"


# In[11]:


powGen_lev1_df.columns = powGen_hdLev1_list


# In[12]:


powGen_lev1_df.drop("Remove", axis=1, inplace=True)


# In[13]:


powGen_lev1_df.drop(' YTD          ', axis=0, inplace=True)
powGen_lev1_df.drop('MONTH', axis=0, inplace=True)


# In[14]:


powGen_lev1_df.index.names = ['DATE']


# In[15]:


powGen_lev1_df = powGen_lev1_df[powGen_lev1_df.index.notnull()]


# In[16]:


powGen_lev1_df.insert(loc=0, column='EGAT', value='')


# In[17]:


powGen_lev1_df['EGAT'] = powGen_lev1_df.fillna(0)['HYDRO'] + powGen_lev1_df.fillna(0)['FUEL OIL'] + powGen_lev1_df.fillna(0)['LIGNITE'] + powGen_lev1_df.fillna(0)['NATURAL GAS'] + powGen_lev1_df.fillna(0)['DIESEL'] + powGen_lev1_df.fillna(0)['GEO THERMAL'] + powGen_lev1_df.fillna(0)['EGAT NRE*']


# In[18]:


yrsArray = getElementValue(powGen_lev1_df.index,'Y')
monArray = getElementValue(powGen_lev1_df.index,'M')


# In[19]:


powGen_lev1_df.insert(loc=0, column='MONTH_PRD', value=monArray)
powGen_lev1_df.insert(loc=0, column='YEAR_PRD', value=yrsArray)
powGen_lev1_df.set_index('YEAR_PRD', append=True, inplace=True)
powGen_lev1_df.set_index('MONTH_PRD', append=True, inplace=True)
powGen_lev1_df.index.names = ['DATE', 'YEAR_PRD', 'MONTH_PRD']


# In[20]:


powGen_lev1_df = powGen_lev1_df.iloc[1:-5]


# In[21]:


powGen_lev1_df.insert(loc=0, column='QTY', value='QTY')
powGen_lev1_df.set_index('QTY', append=True, inplace=True)


# In[22]:


powGen_lev1_df = powGen_lev1_df.reset_index(level=['DATE'])
powGen_lev1_df.drop('DATE', axis=1,inplace = True)


# In[23]:


powGen_lev1_df.drop('HYDRO', axis=1,inplace = True)
powGen_lev1_df.drop('FUEL OIL', axis=1,inplace = True)
powGen_lev1_df.drop('LIGNITE', axis=1,inplace = True)
powGen_lev1_df.drop('NATURAL GAS', axis=1,inplace = True)
powGen_lev1_df.drop('DIESEL', axis=1,inplace = True)
powGen_lev1_df.drop('GEO THERMAL', axis=1,inplace = True)
powGen_lev1_df.drop('EGAT NRE*', axis=1,inplace = True)


# In[24]:


powGen_lev1_df = powGen_lev1_df.unstack(2)


# In[25]:


powGen_lev1_df = powGen_lev1_df.stack(0)


# In[26]:


powGen_lev1_df.index.names = ['YEAR_PRD','MONTH_PRD','FUEL_SOURCE']


# In[27]:


powGen_lev1_df = powGen_lev1_df.reset_index(level=['FUEL_SOURCE'])
powGen_lev1_df = powGen_lev1_df.reset_index(level=['MONTH_PRD'])
powGen_lev1_df = powGen_lev1_df.reset_index(level=['YEAR_PRD'])


# In[28]:


powGen_lev1_df = powGen_lev1_df[(powGen_lev1_df['QTY'] > 0)]


# In[29]:


powGen_lev1_df.to_csv(rootOutput / output_file, header = True, index=False)

