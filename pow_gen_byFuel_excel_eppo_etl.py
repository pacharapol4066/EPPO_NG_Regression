#!/usr/bin/env python
# coding: utf-8

# In[36]:


import pandas as pd
from pathlib import Path
pd.set_option('display.width', 300)
rootSource = Path('source_csv_data')
rootOutput = Path('transformed_data')


# In[37]:


def iterate_col_name(header_list,startPos):
    for pos in header_list:
        if (pos.startswith('Unnamed:')) == True:
            header_list[startPos] = header_list[startPos - 1]
        startPos += 1
    return header_list


# In[38]:


# Get YEAR & MONTH column value
def getElementValue(elementVal,choice):
    bufferVal = []
    lastStr = ''
    if choice == 'Y':
        for pos in elementVal:
            if str(pos).isdigit():
                bufferVal.append(pos)
                lastStr = pos
            else:
                bufferVal.append(lastStr)
    elif choice == 'M':
        for pos in elementVal:
            if not str(pos).isdigit():
                bufferVal.append(str(pos).strip())
                lastStr = pos
            else:
                bufferVal.append(lastStr)
    return bufferVal


# In[39]:


output_file = 'Pandas power generated by fuel.csv'
powGen_excel_file = "Table 5.2-2 Power Generation Classified by Fuel Type_Monthly33Yrs.xlsx"
xl = pd.ExcelFile(rootSource / powGen_excel_file)


# In[40]:


powGen_lev1_df = xl.parse("tab63P", header=[3], index_col=[0])
powGen_lev2_df = xl.parse("tab63P", header=[5], index_col=[0])
powGen_lev3_df = xl.parse("tab63P", header=[6], index_col=[0])


# In[41]:


powGen_hdLev1_list = ['header1','header2','header3','header4','header5','header6','header7','header8']


# In[42]:


powGen_hdLev2_list = iterate_col_name(list(powGen_lev2_df.columns),0)
powGen_hdLev3_list = list(powGen_lev3_df.columns)


# In[43]:


loopRun1 = 0
for each_lev3 in powGen_hdLev3_list:
    if not each_lev3.startswith('Unnamed:'):
        powGen_hdLev1_list[loopRun1] = powGen_hdLev2_list[loopRun1] + ' ' + powGen_hdLev3_list[loopRun1]
    else:
        powGen_hdLev1_list[loopRun1] = powGen_hdLev2_list[loopRun1]
    loopRun1 += 1


# In[44]:


powGen_hdLev1_list[7] = "Remove"
powGen_lev1_df.columns = powGen_hdLev1_list
powGen_lev1_df.drop("Remove", axis=1, inplace=True)
powGen_lev1_df.drop("Date", axis=0, inplace=True)
powGen_lev1_df.drop(" Total        ", axis=0, inplace=True)


# In[45]:


yrsArray = getElementValue(powGen_lev1_df.index,'Y')
monArray = getElementValue(powGen_lev1_df.index,'M')


# In[46]:


powGen_lev1_df.insert(loc=0, column='YEAR_PRD', value=yrsArray)
powGen_lev1_df.set_index('YEAR_PRD', append=True, inplace=True)
powGen_lev1_df.insert(loc=0, column='MONTH_PRD', value=monArray)
powGen_lev1_df.set_index('MONTH_PRD', append=True, inplace=True)
powGen_lev1_df.index.names = ['MONTH', 'YEAR_PRD', 'MONTH_PRD']


# In[47]:


powGen_lev1_df = powGen_lev1_df.iloc[1:-3]


# In[48]:


powGen_lev1_df.insert(loc=0, column='QTY', value='QTY')
powGen_lev1_df.set_index('QTY', append=True, inplace=True)


# In[49]:


powGen_lev1_df = powGen_lev1_df.reset_index(level=['MONTH'])


# In[50]:


powGen_lev1_df.drop('MONTH', axis=1,inplace = True)


# In[51]:


powGen_lev1_df = powGen_lev1_df.unstack(2)


# In[52]:


powGen_lev1_df = powGen_lev1_df.stack(0)


# In[53]:


powGen_lev1_df.index.names = ['YEAR_PRD', 'MONTH_PRD','FUELTYPE']
powGen_lev1_df.to_csv(rootOutput / output_file,header = True)

